/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/transactions": {
    get: {
      parameters: {
        query: {
          transaction_id?: parameters["rowFilter.transactions.transaction_id"];
          account_id?: parameters["rowFilter.transactions.account_id"];
          user_id?: parameters["rowFilter.transactions.user_id"];
          payee_id?: parameters["rowFilter.transactions.payee_id"];
          payee_name?: parameters["rowFilter.transactions.payee_name"];
          amount?: parameters["rowFilter.transactions.amount"];
          is_inflow?: parameters["rowFilter.transactions.is_inflow"];
          is_outflow?: parameters["rowFilter.transactions.is_outflow"];
          description?: parameters["rowFilter.transactions.description"];
          transaction_date?: parameters["rowFilter.transactions.transaction_date"];
          is_user_modified?: parameters["rowFilter.transactions.is_user_modified"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["transactions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          transaction_id?: parameters["rowFilter.transactions.transaction_id"];
          account_id?: parameters["rowFilter.transactions.account_id"];
          user_id?: parameters["rowFilter.transactions.user_id"];
          payee_id?: parameters["rowFilter.transactions.payee_id"];
          payee_name?: parameters["rowFilter.transactions.payee_name"];
          amount?: parameters["rowFilter.transactions.amount"];
          is_inflow?: parameters["rowFilter.transactions.is_inflow"];
          is_outflow?: parameters["rowFilter.transactions.is_outflow"];
          description?: parameters["rowFilter.transactions.description"];
          transaction_date?: parameters["rowFilter.transactions.transaction_date"];
          is_user_modified?: parameters["rowFilter.transactions.is_user_modified"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          transaction_id?: parameters["rowFilter.transactions.transaction_id"];
          account_id?: parameters["rowFilter.transactions.account_id"];
          user_id?: parameters["rowFilter.transactions.user_id"];
          payee_id?: parameters["rowFilter.transactions.payee_id"];
          payee_name?: parameters["rowFilter.transactions.payee_name"];
          amount?: parameters["rowFilter.transactions.amount"];
          is_inflow?: parameters["rowFilter.transactions.is_inflow"];
          is_outflow?: parameters["rowFilter.transactions.is_outflow"];
          description?: parameters["rowFilter.transactions.description"];
          transaction_date?: parameters["rowFilter.transactions.transaction_date"];
          is_user_modified?: parameters["rowFilter.transactions.is_user_modified"];
        };
        body: {
          /** transactions */
          transactions?: definitions["transactions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/accounts": {
    get: {
      parameters: {
        query: {
          account_id?: parameters["rowFilter.accounts.account_id"];
          user_id?: parameters["rowFilter.accounts.user_id"];
          account_name?: parameters["rowFilter.accounts.account_name"];
          description?: parameters["rowFilter.accounts.description"];
          balance?: parameters["rowFilter.accounts.balance"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["accounts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** accounts */
          accounts?: definitions["accounts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          account_id?: parameters["rowFilter.accounts.account_id"];
          user_id?: parameters["rowFilter.accounts.user_id"];
          account_name?: parameters["rowFilter.accounts.account_name"];
          description?: parameters["rowFilter.accounts.description"];
          balance?: parameters["rowFilter.accounts.balance"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          account_id?: parameters["rowFilter.accounts.account_id"];
          user_id?: parameters["rowFilter.accounts.user_id"];
          account_name?: parameters["rowFilter.accounts.account_name"];
          description?: parameters["rowFilter.accounts.description"];
          balance?: parameters["rowFilter.accounts.balance"];
        };
        body: {
          /** accounts */
          accounts?: definitions["accounts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/requesting_user_id": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  transactions: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    transaction_id: string;
    /** Format: text */
    account_id?: string;
    /** Format: text */
    user_id?: string;
    /** Format: text */
    payee_id?: string;
    /** Format: text */
    payee_name?: string;
    /** Format: money */
    amount?: string;
    /** Format: boolean */
    is_inflow?: boolean;
    /** Format: boolean */
    is_outflow?: boolean;
    /** Format: text */
    description?: string;
    /** Format: date */
    transaction_date?: string;
    /**
     * Format: boolean
     * @default false
     */
    is_user_modified?: boolean;
  };
  accounts: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    account_id: string;
    /** Format: text */
    user_id?: string;
    /** Format: text */
    account_name?: string;
    /** Format: text */
    description?: string;
    /** Format: money */
    balance?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description transactions */
  "body.transactions": definitions["transactions"];
  /** Format: text */
  "rowFilter.transactions.transaction_id": string;
  /** Format: text */
  "rowFilter.transactions.account_id": string;
  /** Format: text */
  "rowFilter.transactions.user_id": string;
  /** Format: text */
  "rowFilter.transactions.payee_id": string;
  /** Format: text */
  "rowFilter.transactions.payee_name": string;
  /** Format: money */
  "rowFilter.transactions.amount": string;
  /** Format: boolean */
  "rowFilter.transactions.is_inflow": string;
  /** Format: boolean */
  "rowFilter.transactions.is_outflow": string;
  /** Format: text */
  "rowFilter.transactions.description": string;
  /** Format: date */
  "rowFilter.transactions.transaction_date": string;
  /** Format: boolean */
  "rowFilter.transactions.is_user_modified": string;
  /** @description accounts */
  "body.accounts": definitions["accounts"];
  /** Format: text */
  "rowFilter.accounts.account_id": string;
  /** Format: text */
  "rowFilter.accounts.user_id": string;
  /** Format: text */
  "rowFilter.accounts.account_name": string;
  /** Format: text */
  "rowFilter.accounts.description": string;
  /** Format: money */
  "rowFilter.accounts.balance": string;
}

export interface operations {}

export interface external {}
